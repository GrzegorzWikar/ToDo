{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\todolist\\\\src\\\\Components\\\\DayView.tsx\";\n// src/components/DayView.tsx\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DayView = ({\n  selectedDate\n}) => {\n  const daysInWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: daysInWeek[selectedDate.getDay()]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: selectedDate.toLocaleDateString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border\",\n      children: /*#__PURE__*/_jsxDEV(ScheduleGrid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n// Komponent siatki godzinowej\n_c = DayView;\nconst ScheduleGrid = () => {\n  const startHour = 0; // Początkowa godzina\n  const endHour = 24; // Końcowa godzina\n\n  // Generowanie przedziałków godzinowych co 15 minut\n  const timeSlots = [];\n  for (let hour = startHour; hour < endHour; hour++) {\n    for (let minute = 0; minute < 60; minute += 15) {\n      const time = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n      timeSlots.push( /*#__PURE__*/_jsxDEV(Row, {\n        className: \"border\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"p-1\",\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"p-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, time, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: timeSlots\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_c2 = ScheduleGrid;\nexport default DayView;\nvar _c, _c2;\n$RefreshReg$(_c, \"DayView\");\n$RefreshReg$(_c2, \"ScheduleGrid\");","map":{"version":3,"names":["React","Container","Row","Col","jsxDEV","_jsxDEV","DayView","selectedDate","daysInWeek","className","children","getDay","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","ScheduleGrid","_c","startHour","endHour","timeSlots","hour","minute","time","toString","padStart","push","_c2","$RefreshReg$"],"sources":["C:/Project/todolist/src/Components/DayView.tsx"],"sourcesContent":["// src/components/DayView.tsx\r\nimport React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst DayView: React.FC<{ selectedDate: Date }> = ({ selectedDate }) => {\r\n\r\n    const daysInWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    \r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <h2 className='text-center'>{daysInWeek[selectedDate.getDay()]}</h2>\r\n            <h3 className=\"text-center\">{selectedDate.toLocaleDateString()}</h3>\r\n            <div className=\"border\">\r\n                <ScheduleGrid />\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\n// Komponent siatki godzinowej\r\nconst ScheduleGrid: React.FC = () => {\r\n    const startHour = 0; // Początkowa godzina\r\n    const endHour = 24;  // Końcowa godzina\r\n\r\n    // Generowanie przedziałków godzinowych co 15 minut\r\n    const timeSlots: JSX.Element[] = [];\r\n    for (let hour = startHour; hour < endHour; hour++) {\r\n        for (let minute = 0; minute < 60; minute += 15) {\r\n            const time = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\r\n            timeSlots.push(\r\n                <Row key={time} className=\"border\">\r\n                    <Col className=\"p-1\">\r\n                        {time}\r\n                    </Col>\r\n                    <Col className=\"p-1\">\r\n                        {/* Tutaj możesz dodać komponenty do planowania */}\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {timeSlots}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DayView;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,OAAyC,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAEpE,MAAMC,UAAU,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;EAEjG,oBACIH,OAAA,CAACJ,SAAS;IAACQ,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACvBL,OAAA;MAAII,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAEF,UAAU,CAACD,YAAY,CAACI,MAAM,CAAC,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpEV,OAAA;MAAII,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAEH,YAAY,CAACS,kBAAkB,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpEV,OAAA;MAAKI,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACnBL,OAAA,CAACY,YAAY;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEpB,CAAC;;AAED;AAAAG,EAAA,GAfMZ,OAAyC;AAgB/C,MAAMW,YAAsB,GAAGA,CAAA,KAAM;EACjC,MAAME,SAAS,GAAG,CAAC,CAAC,CAAC;EACrB,MAAMC,OAAO,GAAG,EAAE,CAAC,CAAE;;EAErB;EACA,MAAMC,SAAwB,GAAG,EAAE;EACnC,KAAK,IAAIC,IAAI,GAAGH,SAAS,EAAEG,IAAI,GAAGF,OAAO,EAAEE,IAAI,EAAE,EAAE;IAC/C,KAAK,IAAIC,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG,EAAE,EAAEA,MAAM,IAAI,EAAE,EAAE;MAC5C,MAAMC,IAAI,GAAG,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIH,MAAM,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;MACxFL,SAAS,CAACM,IAAI,eACVtB,OAAA,CAACH,GAAG;QAAYO,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBAC9BL,OAAA,CAACF,GAAG;UAACM,SAAS,EAAC,KAAK;UAAAC,QAAA,EACfc;QAAI;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNV,OAAA,CAACF,GAAG;UAACM,SAAS,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CAAC;MAAA,GANAS,IAAI;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOT,CACT,CAAC;IACL;EACJ;EAEA,oBACIV,OAAA;IAAAK,QAAA,EACKW;EAAS;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAACa,GAAA,GA3BIX,YAAsB;AA6B5B,eAAeX,OAAO;AAAC,IAAAY,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}