{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\todolist\\\\src\\\\Components\\\\Calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Button, ButtonGroup, Badge } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport WeekView from './WeekView';\nimport DayView from './DayView';\nimport DayEventList from './DayEventList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [view, setView] = useState('month');\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const handleViewChange = newView => {\n    setView(newView);\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: () => handleViewChange('month'),\n        children: \"Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: () => handleViewChange('week'),\n        children: \"Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: () => handleViewChange('day'),\n        children: \"Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), view === 'month' && /*#__PURE__*/_jsxDEV(MonthView, {\n      selectedDate: selectedDate,\n      onDateChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), view === 'week' && /*#__PURE__*/_jsxDEV(WeekView, {\n      selectedDate: selectedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), view === 'day' && /*#__PURE__*/_jsxDEV(DayView, {\n      selectedDate: selectedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Calendar, \"8MhPPKAnF0By0vcsLqVIhX4hkGM=\");\n_c = Calendar;\nconst MonthView = ({\n  selectedDate,\n  onDateChange\n}) => {\n  const today = new Date();\n  const currentYear = today.getFullYear();\n  const currentMonth = today.getMonth();\n  const firstDayOfMonth = new Date(currentYear, currentMonth, 1);\n  const lastDayOfMonth = new Date(currentYear, currentMonth + 1, 0);\n  const previousMonthLastDay = new Date(currentYear, currentMonth, 0);\n  const startDay = (firstDayOfMonth.getDay() + 6) % 7; // 0 (poniedziałek) do 6 (niedziela)\n  const daysInMonth = [];\n  const calendar = [];\n  const totalDaysInMonth = lastDayOfMonth.getDate();\n  const totalDaysInPrevMonth = previousMonthLastDay.getDate();\n\n  // Dodajemy dni z poprzedniego miesiąca\n  for (let i = startDay; i > 0; i--) {\n    daysInMonth.push(totalDaysInPrevMonth - i + 1);\n  }\n\n  // Dodajemy dni obecnego miesiąca\n  for (let i = 1; i <= totalDaysInMonth; i++) {\n    daysInMonth.push(i);\n  }\n\n  // Dodajemy dni z następnego miesiąca, tylko jeśli nie osiągnęliśmy jeszcze 35 dni\n  let dayCounter = 1;\n  while (daysInMonth.length < 35) {\n    // 5 tygodni = 35 dni\n    daysInMonth.push(dayCounter++);\n  }\n\n  // Dzielenie dni na tygodnie\n  for (let i = 0; i < daysInMonth.length; i += 7) {\n    calendar.push(daysInMonth.slice(i, i + 7));\n  }\n\n  // Pełne nazwy dni tygodnia\n  const daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"text-center\",\n      children: daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(Col, {\n        className: \"border font-weight-bold\",\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), calendar.map((week, weekIndex) => /*#__PURE__*/_jsxDEV(Row, {\n      children: week.map((day, dayIndex) => /*#__PURE__*/_jsxDEV(Col, {\n        className: `border py-2 ${typeof day === 'string' ? 'text-muted' : ''}`,\n        onClick: () => day !== 'string' && onDateChange(new Date(currentYear, currentMonth, day)),\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            bg: \"info\",\n            pill: true,\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(DayEventList, {\n          day: day,\n          events: daysOfWeek\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this)]\n      }, dayIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this))\n    }, weekIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_c2 = MonthView;\nexport default Calendar;\nvar _c, _c2;\n$RefreshReg$(_c, \"Calendar\");\n$RefreshReg$(_c2, \"MonthView\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Button","ButtonGroup","Badge","WeekView","DayView","DayEventList","jsxDEV","_jsxDEV","Calendar","_s","view","setView","selectedDate","setSelectedDate","Date","handleViewChange","newView","handleDateChange","date","className","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","MonthView","onDateChange","_c","today","currentYear","getFullYear","currentMonth","getMonth","firstDayOfMonth","lastDayOfMonth","previousMonthLastDay","startDay","getDay","daysInMonth","calendar","totalDaysInMonth","getDate","totalDaysInPrevMonth","i","push","dayCounter","length","slice","daysOfWeek","map","day","week","weekIndex","dayIndex","xs","bg","pill","events","_c2","$RefreshReg$"],"sources":["C:/Project/todolist/src/Components/Calendar.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Row, Col, Button, ButtonGroup, Badge } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport WeekView from './WeekView';\r\nimport DayView from './DayView';\r\nimport DayEventList from './DayEventList';\r\n\r\ninterface ToDoProps{\r\n    date : Date,\r\n    title : string,\r\n    description : string\r\n}\r\n\r\nconst Calendar: React.FC = () => {\r\n    const [view, setView] = useState<'month' | 'week' | 'day'>('month');\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n    const handleViewChange = (newView: 'month' | 'week' | 'day') => {\r\n        setView(newView);\r\n    };\r\n\r\n    const handleDateChange = (date: Date) => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <ButtonGroup className=\"mb-3\">\r\n                <Button variant=\"secondary\" onClick={() => handleViewChange('month')}>Month</Button>\r\n                <Button variant=\"secondary\" onClick={() => handleViewChange('week')}>Week</Button>\r\n                <Button variant=\"secondary\" onClick={() => handleViewChange('day')}>Day</Button>\r\n            </ButtonGroup>\r\n            {view === 'month' && (\r\n                <MonthView selectedDate={selectedDate} onDateChange={handleDateChange} />\r\n            )}\r\n            {view === 'week' && (\r\n                <WeekView selectedDate={selectedDate} />\r\n            )}\r\n            {view === 'day' && (\r\n                <DayView selectedDate={selectedDate} />\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst MonthView: React.FC<{ selectedDate: Date; onDateChange: (date: Date) => void }> = ({ selectedDate, onDateChange }) => {\r\n    const today = new Date();\r\n    const currentYear = today.getFullYear();\r\n    const currentMonth = today.getMonth();\r\n\r\n    const firstDayOfMonth = new Date(currentYear, currentMonth, 1);\r\n    const lastDayOfMonth = new Date(currentYear, currentMonth + 1, 0);\r\n\r\n    const previousMonthLastDay = new Date(currentYear, currentMonth, 0);\r\n\r\n    const startDay = (firstDayOfMonth.getDay() + 6) % 7; // 0 (poniedziałek) do 6 (niedziela)\r\n    const daysInMonth: (number | string)[] = [];\r\n    const calendar: (number | string)[][] = [];\r\n\r\n    const totalDaysInMonth = lastDayOfMonth.getDate();\r\n    const totalDaysInPrevMonth = previousMonthLastDay.getDate();\r\n\r\n    // Dodajemy dni z poprzedniego miesiąca\r\n    for (let i = startDay; i > 0; i--) {\r\n        daysInMonth.push(totalDaysInPrevMonth - i + 1);\r\n    }\r\n\r\n    // Dodajemy dni obecnego miesiąca\r\n    for (let i = 1; i <= totalDaysInMonth; i++) {\r\n        daysInMonth.push(i);\r\n    }\r\n\r\n    // Dodajemy dni z następnego miesiąca, tylko jeśli nie osiągnęliśmy jeszcze 35 dni\r\n    let dayCounter = 1;\r\n    while (daysInMonth.length < 35) { // 5 tygodni = 35 dni\r\n        daysInMonth.push(dayCounter++);\r\n    }\r\n\r\n    // Dzielenie dni na tygodnie\r\n    for (let i = 0; i < daysInMonth.length; i += 7) {\r\n        calendar.push(daysInMonth.slice(i, i + 7));\r\n    }\r\n\r\n    // Pełne nazwy dni tygodnia\r\n    const daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\r\n\r\n    return (\r\n        <div>\r\n            <Row className=\"text-center\">\r\n                {daysOfWeek.map(day => (\r\n                    <Col key={day} className=\"border font-weight-bold\">\r\n                        {day}\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n            {calendar.map((week, weekIndex) => (\r\n                <Row key={weekIndex}>\r\n                    {week.map((day, dayIndex) => (\r\n                        <Col\r\n                            key={dayIndex}\r\n                            className={`border py-2 ${typeof day === 'string' ? 'text-muted' : ''}`}\r\n                            onClick={() => day !== 'string' && onDateChange(new Date(currentYear, currentMonth, day as number))}\r\n                        >\r\n                            <Col xs={6} ></Col>\r\n                            <Col xs={2}>\r\n                                <Badge bg=\"info\" pill>\r\n                                    {day}\r\n                                </Badge>\r\n                            </Col>\r\n                            <DayEventList day={day} events={daysOfWeek}/>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}