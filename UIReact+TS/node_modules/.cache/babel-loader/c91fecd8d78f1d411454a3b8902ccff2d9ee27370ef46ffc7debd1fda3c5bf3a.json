{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\todolist\\\\src\\\\Components\\\\Calendar.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  const today = new Date();\n  const currentYear = today.getFullYear();\n  const currentMonth = today.getMonth();\n  const firstDayOfMonth = new Date(currentYear, currentMonth, 1);\n  const lastDayOfMonth = new Date(currentYear, currentMonth + 1, 0);\n  const startDay = firstDayOfMonth.getDay(); // 0 (niedziela) do 6 (sobota)\n  const daysInMonth = [];\n  const calendar = [];\n  const totalDaysInMonth = lastDayOfMonth.getDate();\n\n  // Dodajemy puste miejsca przed pierwszym dniem miesiąca, jeśli miesiąc nie zaczyna się w niedzielę\n  for (let i = 0; i < startDay; i++) {\n    daysInMonth.push(null);\n  }\n\n  // Dodajemy dni miesiąca\n  for (let i = 1; i <= totalDaysInMonth; i++) {\n    daysInMonth.push(i);\n  }\n\n  // Jeśli po dodaniu wszystkich dni miesiąca liczba dni w ostatnim tygodniu nie wynosi 7, to dodajemy odpowiednią liczbę nulli, aby wypełnić tydzień\n  while (daysInMonth.length % 7 !== 0) {\n    daysInMonth.push(null);\n  }\n\n  // Dzielenie dni na tygodnie\n  for (let i = 0; i < daysInMonth.length; i += 7) {\n    calendar.push(daysInMonth.slice(i, i + 7));\n  }\n\n  // Pełne nazwy dni tygodnia\n  const daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row text-center\",\n      children: daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col border font-weight-bold\",\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), calendar.map((week, weekIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row text-center\",\n      children: week.map((day, dayIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col border py-2\",\n        children: day !== null ? day : ''\n      }, dayIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this))\n    }, weekIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Calendar","today","Date","currentYear","getFullYear","currentMonth","getMonth","firstDayOfMonth","lastDayOfMonth","startDay","getDay","daysInMonth","calendar","totalDaysInMonth","getDate","i","push","length","slice","daysOfWeek","className","children","map","day","fileName","_jsxFileName","lineNumber","columnNumber","week","weekIndex","dayIndex","_c","$RefreshReg$"],"sources":["C:/Project/todolist/src/Components/Calendar.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst Calendar: React.FC = () => {\r\n    const today = new Date();\r\n    const currentYear = today.getFullYear();\r\n    const currentMonth = today.getMonth();\r\n\r\n    const firstDayOfMonth = new Date(currentYear, currentMonth, 1);\r\n    const lastDayOfMonth = new Date(currentYear, currentMonth + 1, 0);\r\n\r\n    const startDay = firstDayOfMonth.getDay(); // 0 (niedziela) do 6 (sobota)\r\n    const daysInMonth: (number | null)[] = [];\r\n    const calendar: (number | null)[][] = [];\r\n\r\n    const totalDaysInMonth = lastDayOfMonth.getDate();\r\n\r\n    // Dodajemy puste miejsca przed pierwszym dniem miesiąca, jeśli miesiąc nie zaczyna się w niedzielę\r\n    for (let i = 0; i < startDay; i++) {\r\n        daysInMonth.push(null);\r\n    }\r\n\r\n    // Dodajemy dni miesiąca\r\n    for (let i = 1; i <= totalDaysInMonth; i++) {\r\n        daysInMonth.push(i);\r\n    }\r\n\r\n    // Jeśli po dodaniu wszystkich dni miesiąca liczba dni w ostatnim tygodniu nie wynosi 7, to dodajemy odpowiednią liczbę nulli, aby wypełnić tydzień\r\n    while (daysInMonth.length % 7 !== 0) {\r\n        daysInMonth.push(null);\r\n    }\r\n\r\n    // Dzielenie dni na tygodnie\r\n    for (let i = 0; i < daysInMonth.length; i += 7) {\r\n        calendar.push(daysInMonth.slice(i, i + 7));\r\n    }\r\n\r\n    // Pełne nazwy dni tygodnia\r\n    const daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <div className=\"row text-center\">\r\n                {daysOfWeek.map(day => (\r\n                    <div key={day} className=\"col border font-weight-bold\">\r\n                        {day}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {calendar.map((week, weekIndex) => (\r\n                <div key={weekIndex} className=\"row text-center\">\r\n                    {week.map((day, dayIndex) => (\r\n                        <div key={dayIndex} className=\"col border py-2\">\r\n                            {day !== null ? day : ''}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}