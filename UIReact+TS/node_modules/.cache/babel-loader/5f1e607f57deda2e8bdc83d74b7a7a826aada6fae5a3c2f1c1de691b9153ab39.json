{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\todolist\\\\src\\\\Components\\\\Calendar.tsx\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  const weekDays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n  const weekInMonth = [0, 1, 2, 3, 4, 5];\n  const takie = () => {\n    weekInMonth.map(week => /*#__PURE__*/_jsxDEV(Row, {\n      id: week.toString(),\n      md: \"auto\",\n      children: week === 0 ? \"day\" : \"TAKI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        md: 4,\n        children: weekDays.map(day => /*#__PURE__*/_jsxDEV(Col, {\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: \"1 of 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          children: \"2 of 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: \"3 of 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["Container","Row","Col","jsxDEV","_jsxDEV","Fragment","_Fragment","Calendar","weekDays","weekInMonth","takie","map","week","id","toString","md","children","fileName","_jsxFileName","lineNumber","columnNumber","fluid","day","xs","_c","$RefreshReg$"],"sources":["C:/Project/todolist/src/Components/Calendar.tsx"],"sourcesContent":["import Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\"; \r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst Calendar = () => {\r\n    const weekDays =[\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\", \"Sunday\"]\r\n    const weekInMonth = [0,1,2,3,4,5];\r\n\r\n    const takie = () =>  {weekInMonth.map(week => \r\n        <Row id={week.toString()} md=\"auto\">\r\n                {week === 0 ? \"day\" : \"TAKI\"}\r\n        </Row>\r\n    )}\r\n\r\n    return(\r\n        <>\r\n        <Container fluid>\r\n            <Row md={4}>\r\n                {weekDays.map(day => \r\n                    <Col>\r\n                        {day}\r\n                    </Col>\r\n                )\r\n            }   \r\n            </Row>\r\n        </Container>\r\n        <Container>\r\n        <Row md={4}>\r\n          <Col>1 of 3</Col>\r\n          <Col xs={6}>2 of 3</Col>\r\n          <Col>3 of 3</Col>\r\n        </Row>\r\n      </Container>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Calendar;"],"mappings":";AAAA,OAAOA,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMC,QAAQ,GAAE,CAAC,QAAQ,EAAC,SAAS,EAAC,WAAW,EAAC,UAAU,EAAC,QAAQ,EAAC,UAAU,EAAE,QAAQ,CAAC;EACzF,MAAMC,WAAW,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAEjC,MAAMC,KAAK,GAAGA,CAAA,KAAO;IAACD,WAAW,CAACE,GAAG,CAACC,IAAI,iBACtCR,OAAA,CAACH,GAAG;MAACY,EAAE,EAAED,IAAI,CAACE,QAAQ,CAAC,CAAE;MAACC,EAAE,EAAC,MAAM;MAAAC,QAAA,EAC1BJ,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CACT,CAAC;EAAA,CAAC;EAEF,oBACIhB,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACAZ,OAAA,CAACJ,SAAS;MAACqB,KAAK;MAAAL,QAAA,eACZZ,OAAA,CAACH,GAAG;QAACc,EAAE,EAAE,CAAE;QAAAC,QAAA,EACNR,QAAQ,CAACG,GAAG,CAACW,GAAG,iBACblB,OAAA,CAACF,GAAG;UAAAc,QAAA,EACCM;QAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACZhB,OAAA,CAACJ,SAAS;MAAAgB,QAAA,eACVZ,OAAA,CAACH,GAAG;QAACc,EAAE,EAAE,CAAE;QAAAC,QAAA,gBACTZ,OAAA,CAACF,GAAG;UAAAc,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjBhB,OAAA,CAACF,GAAG;UAACqB,EAAE,EAAE,CAAE;UAAAP,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBhB,OAAA,CAACF,GAAG;UAAAc,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eACV,CAAC;AAET,CAAC;AAACI,EAAA,GA/BIjB,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}