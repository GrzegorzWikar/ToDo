{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\todolist\\\\src\\\\Components\\\\Calendar.tsx\",\n  _s = $RefreshSig$();\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { useState } from \"react\";\nimport Day from \"./Day\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateFirstDayOfMonth = (currentDay, currentWeekday) => {\n  const daysInWeek = 7;\n  const daysPassed = currentDay % daysInWeek;\n  const firstDayIndex = (currentWeekday - daysPassed + daysInWeek) % daysInWeek;\n  return firstDayIndex;\n};\nconst Calendar = () => {\n  _s();\n  const daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n  const weekInMonth = [0, 1, 2, 3, 4, 5];\n  const currentDate = new Date();\n  const splitDate = currentDate.toString().split(\" \");\n  const [day, setDay] = useState(currentDate.getDay()); // Dzień miesiąca\n  const [weekday, setWeekday] = useState(daysOfWeek.findIndex(day => {\n    day.includes(splitDate[0]);\n  })); // Dzień tygodnia  \n\n  const firstDay = calculateFirstDayOfMonth(day, weekday);\n  function firstDayOfMonth(currentDay, currentWeekday) {\n    var calculatedDay = currentDay;\n    while (calculatedDay > daysOfWeek.length) {\n      console.log(calculatedDay);\n      calculatedDay -= daysOfWeek.length;\n    }\n    return calculatedDay;\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [weekInMonth.map(week => /*#__PURE__*/_jsxDEV(Row, {\n      children: daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(Col, {\n        children: week === 0 ? day : /*#__PURE__*/_jsxDEV(Day, {\n          dayInMonth: week\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 53\n        }, this)\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }, this))\n    }, week, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)), currentDate.toString()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Calendar, \"r0y2gLvpq666WBAHczLn5hW1eK8=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["Container","Row","Col","useState","Day","jsxDEV","_jsxDEV","calculateFirstDayOfMonth","currentDay","currentWeekday","daysInWeek","daysPassed","firstDayIndex","Calendar","_s","daysOfWeek","weekInMonth","currentDate","Date","splitDate","toString","split","day","setDay","getDay","weekday","setWeekday","findIndex","includes","firstDay","firstDayOfMonth","calculatedDay","length","console","log","fluid","children","map","week","dayInMonth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Project/todolist/src/Components/Calendar.tsx"],"sourcesContent":["import Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\"; \r\nimport Col from \"react-bootstrap/Col\";\r\nimport { useState } from \"react\";\r\nimport Day from \"./Day\";\r\nimport { Console } from \"console\";\r\n\r\nconst calculateFirstDayOfMonth = (currentDay: number, currentWeekday: number): number => {\r\n    const daysInWeek = 7;\r\n    const daysPassed = currentDay % daysInWeek;\r\n    const firstDayIndex = (currentWeekday - daysPassed + daysInWeek) % daysInWeek;\r\n    return firstDayIndex;\r\n};\r\n\r\nconst Calendar = () => {\r\n    const daysOfWeek : string[] = [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\", \"Sunday\"]\r\n    const weekInMonth : number[] = [0,1,2,3,4,5];\r\n\r\n    const currentDate : Date = new Date();\r\n    const splitDate : string[] = currentDate.toString().split(\" \");\r\n\r\n    const [day, setDay] = useState<number>(currentDate.getDay()); // Dzień miesiąca\r\n    const [weekday, setWeekday] = useState<number>(daysOfWeek.findIndex(day => {day.includes(splitDate[0])})); // Dzień tygodnia  \r\n  \r\n    const firstDay : number = calculateFirstDayOfMonth(day, weekday);\r\n\r\n    function firstDayOfMonth( currentDay : number, currentWeekday : number) : number {\r\n        var calculatedDay : number = currentDay;\r\n        while (calculatedDay > daysOfWeek.length){\r\n            console.log(calculatedDay);\r\n            calculatedDay -= daysOfWeek.length;\r\n        }\r\n        return calculatedDay;\r\n    }\r\n    \r\n    return(\r\n        <Container fluid>\r\n            {weekInMonth.map(week => \r\n                <Row key={week}>\r\n                    {daysOfWeek.map(day => \r\n                            <Col key={day}>\r\n                                {week === 0 ? day : <Day dayInMonth={week} />}\r\n                            </Col>\r\n                        )\r\n                    }   \r\n                </Row>\r\n            )}    \r\n            {currentDate.toString()}\r\n            \r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Calendar;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxB,MAAMC,wBAAwB,GAAGA,CAACC,UAAkB,EAAEC,cAAsB,KAAa;EACrF,MAAMC,UAAU,GAAG,CAAC;EACpB,MAAMC,UAAU,GAAGH,UAAU,GAAGE,UAAU;EAC1C,MAAME,aAAa,GAAG,CAACH,cAAc,GAAGE,UAAU,GAAGD,UAAU,IAAIA,UAAU;EAC7E,OAAOE,aAAa;AACxB,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,UAAqB,GAAG,CAAC,QAAQ,EAAC,SAAS,EAAC,WAAW,EAAC,UAAU,EAAC,QAAQ,EAAC,UAAU,EAAE,QAAQ,CAAC;EACvG,MAAMC,WAAsB,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAE5C,MAAMC,WAAkB,GAAG,IAAIC,IAAI,CAAC,CAAC;EACrC,MAAMC,SAAoB,GAAGF,WAAW,CAACG,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EAE9D,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGpB,QAAQ,CAASc,WAAW,CAACO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAASY,UAAU,CAACY,SAAS,CAACL,GAAG,IAAI;IAACA,GAAG,CAACM,QAAQ,CAACT,SAAS,CAAC,CAAC,CAAC,CAAC;EAAA,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE3G,MAAMU,QAAiB,GAAGtB,wBAAwB,CAACe,GAAG,EAAEG,OAAO,CAAC;EAEhE,SAASK,eAAeA,CAAEtB,UAAmB,EAAEC,cAAuB,EAAW;IAC7E,IAAIsB,aAAsB,GAAGvB,UAAU;IACvC,OAAOuB,aAAa,GAAGhB,UAAU,CAACiB,MAAM,EAAC;MACrCC,OAAO,CAACC,GAAG,CAACH,aAAa,CAAC;MAC1BA,aAAa,IAAIhB,UAAU,CAACiB,MAAM;IACtC;IACA,OAAOD,aAAa;EACxB;EAEA,oBACIzB,OAAA,CAACN,SAAS;IAACmC,KAAK;IAAAC,QAAA,GACXpB,WAAW,CAACqB,GAAG,CAACC,IAAI,iBACjBhC,OAAA,CAACL,GAAG;MAAAmC,QAAA,EACCrB,UAAU,CAACsB,GAAG,CAACf,GAAG,iBACXhB,OAAA,CAACJ,GAAG;QAAAkC,QAAA,EACCE,IAAI,KAAK,CAAC,GAAGhB,GAAG,gBAAGhB,OAAA,CAACF,GAAG;UAACmC,UAAU,EAAED;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADvCrB,GAAG;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACT;IAAC,GALCL,IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOT,CACT,CAAC,EACA1B,WAAW,CAACG,QAAQ,CAAC,CAAC;EAAA;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhB,CAAC;AAEpB,CAAC;AAAC7B,EAAA,CArCID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}