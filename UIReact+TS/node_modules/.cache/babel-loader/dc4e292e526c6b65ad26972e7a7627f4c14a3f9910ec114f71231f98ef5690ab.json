{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\todolist\\\\src\\\\Components\\\\Calendar.tsx\",\n  _s = $RefreshSig$();\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { useState } from \"react\";\nimport Day from \"./Day\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const weekInMonth = [0, 1, 2, 3, 4, 5];\n  const currentDate = new Date();\n  const splitDate = currentDate.toString().split(\" \");\n  const [day, setDay] = useState(currentDate.getDate()); // Dzień miesiąca\n  const [weekday, setWeekday] = useState(daysOfWeek.findIndex(day => {\n    day.includes(splitDate[0]);\n  })); // Dzień tygodnia  \n\n  function firstDayOfMonth(currentDay) {\n    var calculatedDay = currentDay;\n    console.log(\"HUJ JEBANY I BANANY\");\n    while (calculatedDay > daysOfWeek.length) {\n      calculatedDay -= daysOfWeek.length;\n    }\n    var indexOfWeekDay = currentDate.getDay();\n    var reverseDayOfWeek = daysOfWeek.reverse();\n    console.log(reverseDayOfWeek[1]);\n    return reverseDayOfWeek[indexOfWeekDay - 1 - calculatedDay];\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [weekInMonth.map(week => /*#__PURE__*/_jsxDEV(Row, {\n      children: daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(Col, {\n        children: week === 0 ? day : /*#__PURE__*/_jsxDEV(Day, {\n          dayInMonth: week\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 53\n        }, this)\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }, this))\n    }, week, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)), firstDayOfMonth(day)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Calendar, \"0aGt+XsidTnu84Pf/N4XhjsK4Hs=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["Container","Row","Col","useState","Day","jsxDEV","_jsxDEV","Calendar","_s","daysOfWeek","weekInMonth","currentDate","Date","splitDate","toString","split","day","setDay","getDate","weekday","setWeekday","findIndex","includes","firstDayOfMonth","currentDay","calculatedDay","console","log","length","indexOfWeekDay","getDay","reverseDayOfWeek","reverse","fluid","children","map","week","dayInMonth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Project/todolist/src/Components/Calendar.tsx"],"sourcesContent":["import Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\"; \r\nimport Col from \"react-bootstrap/Col\";\r\nimport { useState } from \"react\";\r\nimport Day from \"./Day\";\r\n\r\nconst Calendar = () => {\r\n    const daysOfWeek : string[] = [\"Sunday\", \"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]\r\n    const weekInMonth : number[] = [0,1,2,3,4,5];\r\n\r\n    const currentDate : Date = new Date();\r\n    const splitDate : string[] = currentDate.toString().split(\" \");\r\n\r\n    const [day, setDay] = useState<number>(currentDate.getDate()); // Dzień miesiąca\r\n    const [weekday, setWeekday] = useState<number>(daysOfWeek.findIndex(day => {day.includes(splitDate[0])})); // Dzień tygodnia  \r\n\r\n    function firstDayOfMonth( currentDay : number) : string {\r\n        var calculatedDay : number = currentDay;\r\n        console.log(\"HUJ JEBANY I BANANY\")\r\n        while (calculatedDay > daysOfWeek.length){\r\n            calculatedDay -= daysOfWeek.length;\r\n        }\r\n        \r\n        var indexOfWeekDay : number = currentDate.getDay();\r\n        var reverseDayOfWeek : string[] = daysOfWeek.reverse();\r\n\r\n        console.log(reverseDayOfWeek[1])\r\n        return reverseDayOfWeek[indexOfWeekDay - 1 - calculatedDay];\r\n    }\r\n    \r\n    return(\r\n        <Container fluid>\r\n            {weekInMonth.map(week => \r\n                <Row key={week}>\r\n                    {daysOfWeek.map(day => \r\n                            <Col key={day}>\r\n                                {week === 0 ? day : <Day dayInMonth={week} />}\r\n                            </Col>\r\n                        )\r\n                    }   \r\n                </Row>\r\n            )}    \r\n            {firstDayOfMonth(day)}     \r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Calendar;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,UAAqB,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAC,SAAS,EAAC,WAAW,EAAC,UAAU,EAAC,QAAQ,EAAC,UAAU,CAAC;EACvG,MAAMC,WAAsB,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAE5C,MAAMC,WAAkB,GAAG,IAAIC,IAAI,CAAC,CAAC;EACrC,MAAMC,SAAoB,GAAGF,WAAW,CAACG,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EAE9D,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAASQ,WAAW,CAACO,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAASM,UAAU,CAACY,SAAS,CAACL,GAAG,IAAI;IAACA,GAAG,CAACM,QAAQ,CAACT,SAAS,CAAC,CAAC,CAAC,CAAC;EAAA,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE3G,SAASU,eAAeA,CAAEC,UAAmB,EAAW;IACpD,IAAIC,aAAsB,GAAGD,UAAU;IACvCE,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,OAAOF,aAAa,GAAGhB,UAAU,CAACmB,MAAM,EAAC;MACrCH,aAAa,IAAIhB,UAAU,CAACmB,MAAM;IACtC;IAEA,IAAIC,cAAuB,GAAGlB,WAAW,CAACmB,MAAM,CAAC,CAAC;IAClD,IAAIC,gBAA2B,GAAGtB,UAAU,CAACuB,OAAO,CAAC,CAAC;IAEtDN,OAAO,CAACC,GAAG,CAACI,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAChC,OAAOA,gBAAgB,CAACF,cAAc,GAAG,CAAC,GAAGJ,aAAa,CAAC;EAC/D;EAEA,oBACInB,OAAA,CAACN,SAAS;IAACiC,KAAK;IAAAC,QAAA,GACXxB,WAAW,CAACyB,GAAG,CAACC,IAAI,iBACjB9B,OAAA,CAACL,GAAG;MAAAiC,QAAA,EACCzB,UAAU,CAAC0B,GAAG,CAACnB,GAAG,iBACXV,OAAA,CAACJ,GAAG;QAAAgC,QAAA,EACCE,IAAI,KAAK,CAAC,GAAGpB,GAAG,gBAAGV,OAAA,CAACF,GAAG;UAACiC,UAAU,EAAED;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADvCzB,GAAG;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACT;IAAC,GALCL,IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOT,CACT,CAAC,EACAlB,eAAe,CAACP,GAAG,CAAC;EAAA;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEpB,CAAC;AAACjC,EAAA,CAvCID,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}