{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\todolist\\\\src\\\\Components\\\\Calendar.tsx\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  const weekDays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n  const weekInMonth = [0, 1, 2, 3, 4, 5];\n  const Day = week => {\n    if (week === 0) return week;\n    return weekDays[week];\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [weekDays.map(day => {\n      return /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this);\n    }), weekInMonth.map(week => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        children: Day(week)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 36\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["Container","Row","Col","jsxDEV","_jsxDEV","Calendar","weekDays","weekInMonth","Day","week","children","map","day","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Project/todolist/src/Components/Calendar.tsx"],"sourcesContent":["import { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Calendar = () => {\r\n    const weekDays =[\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\", \"Sunday\"]\r\n    const weekInMonth = [0,1,2,3,4,5];\r\n\r\n    const Day = (week : number) =>{\r\n        if (week === 0) return(week)\r\n        return (weekDays[week])\r\n    }\r\n    \r\n    return(\r\n        <Container>\r\n            {weekDays.map(day => {\r\n               return( \r\n                    <Col>\r\n                    </Col>\r\n               )\r\n            })}\r\n             {weekInMonth.map(week => {\r\n                            return(<Row>\r\n                                {Day(week)}\r\n                        </Row>)})}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Calendar;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMC,QAAQ,GAAE,CAAC,QAAQ,EAAC,SAAS,EAAC,WAAW,EAAC,UAAU,EAAC,QAAQ,EAAC,UAAU,EAAE,QAAQ,CAAC;EACzF,MAAMC,WAAW,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAEjC,MAAMC,GAAG,GAAIC,IAAa,IAAI;IAC1B,IAAIA,IAAI,KAAK,CAAC,EAAE,OAAOA,IAAI;IAC3B,OAAQH,QAAQ,CAACG,IAAI,CAAC;EAC1B,CAAC;EAED,oBACIL,OAAA,CAACJ,SAAS;IAAAU,QAAA,GACLJ,QAAQ,CAACK,GAAG,CAACC,GAAG,IAAI;MAClB,oBACKR,OAAA,CAACF,GAAG;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAEd,CAAC,CAAC,EACAT,WAAW,CAACI,GAAG,CAACF,IAAI,IAAI;MACV,oBAAOL,OAAA,CAACH,GAAG;QAAAS,QAAA,EACNF,GAAG,CAACC,IAAI;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAC,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEpB,CAAC;AAACC,EAAA,GAvBIZ,QAAQ;AAyBd,eAAeA,QAAQ;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}